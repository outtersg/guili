#!/bin/sh
# Copyright (c) 2004 Guillaume Outters
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

set -e

Delirant() { local s2 ; while [ -h "$s" ] ; do s2="`readlink "$s"`" ; case "$s2" in [^/]*) s2="`dirname "$s"`/$s2" ;; esac ; s="$s2" ; done ; } ; SCRIPTS() { local s="`command -v "$0"`" ; [ -x "$s" -o ! -x "$0" ] || s="$0" ; case "$s" in */bin/*sh) case "`basename "$s"`" in *.*) true ;; *sh) s="$1" ;; esac ;; esac ; case "$s" in [^/]*) local d="`dirname "$s"`" ; s="`cd "$d" ; pwd`/`basename "$s"`" ;; esac ; Delirant ; s="`dirname "$s"`" ; Delirant ; SCRIPTS="$s" ; } ; SCRIPTS
. "$SCRIPTS/util.sh"
. "$SCRIPTS/garg.sh"

v 1.7.0.6 && prerequis="make \\ perl gettext expat iconv curl zlib" || true
v 1.7.5.4
v 1.7.10.4 && modifs=autoconfer || true
v 1.8.3.2 && modifs=sansConfigurer || true
v 2.9.0 && modifs="sansConfigurer sansMoinsR perler" || true
v 2.12.0 || true
v 2.12.2 || true
v 2.14.1 || true
v 2.15.0 || true
v 2.15.1 || true
v 2.16.0 || true
v 2.18.0 || true
v 2.20.1 || true
v 2.23.0 || true
v 2.25.1 || true
v 2.33.0 || true
v 2.34.0 || true
v 2.38.1 || true
v 2.40.1 || true
v 2.41.0 || true
v 2.48.1 || true
v 2.51.0 || true

if option svn
then
	prerequis="$prerequis depsgitsvn"
fi

# Modifications

perler()
{
	# Perl codé en dur.
	perler_perl="$INSTALLS/bin/perl"
	egrep -rl /usr/bin/perl\|/usr/local/bin/perl . | while read f
	do
		filtrer "$f" sed -e "s#/usr/bin/perl#$perler_perl#g" -e "s#/usr/local/bin/perl#$perler_perl#g"
	done
}

sansMoinsR()
{
	case `uname` in
		FreeBSD|Linux)
			NO_R_TO_GCC_LINKER=1
			#CC_LD_DYNPATH=-L
			export NO_R_TO_GCC_LINKER #CC_LD_DYNPATH
			;;
	esac
}

autoconfer()
{
	make configure
}

sansConfigurer()
{
	sansConfigure=1
	# L'invocation du make install doit être strictement la même que celle du make, sans quoi il détecte un changement d'environnement et retente toute la compil' (en root). Or comme on passe par sudo pour le make install, et que celui-ci dézingue l'environnement, on doit s'assurer que les variables passées au make traversent aussi le sudo make install. Le plus simple est de les ajouter aux paramètres des deux.
	# NEEDS_LIBICONV car un -liconv dans LDFLAGS est insuffisant pour un gcc 7 sous Ubuntu 18.04 ($LDFLAGS est placée avant les .a et en particulier ligit.a qui invoque iconv_open (en l'occurrence libiconv_open car iconv a été compilé dans son mode par défaut, avec préfixe sur toutes les fonctions publiques), or pour une raison encore inexpliquée si libiconv.so (contenant un T libiconv_open) est précisée avant libgit.a (contenant un U libiconv_open), on se tape un undefined symbol libiconv_open, s'il est juste après il est correctement reconnu. A-ce à voir avec le fait que la libc définit un iconv_open (sans préfixe lib)?
	garg -a paramsMake prefix="$dest" OPENSSLDIR="$INSTALLS" LDFLAGS="$LDFLAGS" CPPFLAGS="$CPPFLAGS" CFLAGS="$CFLAGS" NEEDS_LIBICONV=1
}

# Variables

archive="http://kernel.org/pub/software/scm/git/git-$version.tar.bz2"
archive="https://github.com/git/git/tarball/v$version?name=/git-$version.tar.gz"

destiner

prerequis

echo Obtention et décompression… >&2
obtenirEtAllerDansVersion

for modif in true $modifs ; do $modif ; done

echo Configuration… >&2
if [ -z "$sansConfigure" ]
then
./configure --prefix="$dest"
fi

echo Compilation… >&2
garg paramsMake make V=1 NEEDS_LIBICONV=1

echo Installation… >&2
garg -a paramsMake install
garg paramsMake sudo NO_R_TO_GCC_LINKER=$NO_R_TO_GCC_LINKER make
sutiliser
