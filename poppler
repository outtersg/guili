#!/bin/sh
# Copyright (c) 2006 Guillaume Outters
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

set -e

Delirant() { local s2 ; while [ -h "$s" ] ; do s2="`readlink "$s"`" ; case "$s2" in [^/]*) s2="`dirname "$s"`/$s2" ;; esac ; s="$s2" ; done ; } ; SCRIPTS() { local s="`command -v "$0"`" ; [ -x "$s" -o ! -x "$0" ] || s="$0" ; case "$s" in */bin/*sh) case "`basename "$s"`" in *.*) true ;; *sh) s="$1" ;; esac ;; esac ; case "$s" in [^/]*) local d="`dirname "$s"`" ; s="`cd "$d" ; pwd`/`basename "$s"`" ;; esac ; Delirant ; s="`dirname "$s"`" ; Delirant ; SCRIPTS="$s" ; } ; SCRIPTS
. "$SCRIPTS/util.sh"

OPTIONS_CONF=
OPTIONS_CMAKE=

# Historique des versions gérées

prerequis="python cmake pkgconfig \\ libpng"
v 0.22.5 && modifs="llongmax" || true
v 0.24.4 || true
v 0.32.0 && prerequis="$prerequis libopenjp2" || true
v 0.34.0 || true
v 0.52.0 && prerequis="$prerequis cairo fontconfig libtiff curl" || true
v 0.72.0 && modifs="$modifs nssVisible" && prerequis="$prerequis nss curl" || true # Pour la signature des PDF.
v 0.75.0 || true
v 0.84.0 || true
v 0.89.0 || true
v 21.09.0 && modifs="$modifs sanssplash incpng incfontconfig chartrait" || true
v 22.10.0 || true
v 23.04.0 || true
v 23.08.0 || true
v 23.09.0 || true
# Premières versions mettant ENABLE_QT5 à ON par défaut:
v 23.10.0 || true
v 24.12.0 || true
v 25.03.0 || true

# Pour LibreOffice, il nous faut les en-têtes internes (Inkscape a le même souci, cf. https://bugs.launchpad.net/inkscape/+bug/254849).
if option xpdf
then
	OPTIONS_CONF="$OPTIONS_CONF --enable-xpdf-headers"
	OPTIONS_CMAKE="$OPTIONS_CMAKE -DENABLE_UNSTABLE_API_ABI_HEADERS=1"
fi

optionSi qt || true
option qt && versions "qt >= 5 < 6" | grep -q . || OPTIONS_CMAKE="$OPTIONS_CMAKE -DENABLE_QT5=OFF"
option qt && versions "qt >= 6 < 7" | grep -q . || OPTIONS_CMAKE="$OPTIONS_CMAKE -DENABLE_QT6=OFF"

# Modifications

chartrait()
{
	# L'obsolétisation forcée des basic_string<autre_chose_que_du_caractère> par clang a laissé sur le carreau pas mal de monde, qui ont mis un peu de temps à se relever. Poppler en fait partie.
	# https://reviews.llvm.org/D138307
	# https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=281886
	# https://forums.gentoo.org/viewtopic-p-8847761.html?sid=874740be32930956eefab5d16078417c
	# https://github.com/pocoproject/poco/issues/4722
	# https://github.com/joncampbell123/dosbox-x/issues/5259
	
	filtrer cpp/poppler-global.h sed -e 's/basic_string<unsigned short>/basic_string<char16_t>/g' # Regardé sur les dernières versions de source de poppler.
}

incpng()
{
	# "HtmlOutputDev.cc: fatal error: 'png.h' file not found" parce que png/include ne fait pas partie des CFLAGS transmis par CMake dans utils.
	filtrer utils/CMakeLists.txt sed -e '/target_link_libraries(pdftohtml/i\
target_include_directories(pdftohtml PRIVATE '"$destlibpng/include"')
'
}

incfontconfig()
{
	filtrer cmake/modules/FindCairo.cmake sed -e "/set.CAIRO_INCLUDE_DIRS/s#;#;$destfontconfig/include;#"
}

sanssplash()
{
	# "Boost recommended for Splash.  Use ENABLE_BOOST=OFF to skip.": ben on s'en fout, on fait du Cairo.
	OPTIONS_CMAKE="$OPTIONS_CMAKE -DENABLE_BOOST=OFF"
}

nssVisible()
{
	if true
	then
		export CPPFLAGS="-I$destnss/include/nss $CPPFLAGS"
		export CXXFLAGS="-I$destnss/include/nss $CXXFLAGS"
		export CFLAGS="-I$destnss/include/nss $CFLAGS"
	else
	filtrer poppler/SignatureHandler.h sed -E -e '/<(cert|cms|cryptohi|sec[a-z]*)\.h>/s#<#<nss//#'
	fi
}

llongmax()
{
	# Une Linuxerie.
	filtrer poppler/Lexer.cc sed -e '/long long.*LLONG_MAX/{
i\
#ifndef LLONG_MAX
i\
#define LLONG_MAX 9223372036854775807LL
i\
#endif
}'
	filtrer poppler/PDFDoc.cc sed -e '/^#define/{
x
s/././
x
t
h
i\
#ifndef LLONG_MAX
i\
#define LLONG_MAX 9223372036854775807LL
i\
#endif
}'
}

# Variables

archive="http://poppler.freedesktop.org/poppler-$version.tar.xz"
pge $version 0.24 || archive="http://poppler.freedesktop.org/poppler-$version.tar.gz"

optionSi ft/freetype || true
optionSi glib || true
echo "#include <gpgme.h>" > $TMP/$$/1.c
if ! optionSi gpgme && ! compilo_test -i compiloSysVersion _compiler_c -c -o $TMP/$$/1.o $TMP/$$/1.c 2> /dev/null
then
	OPTIONS_CMAKE="$OPTIONS_CMAKE -DENABLE_GPGME=OFF"
fi

destiner

prerequis

obtenirEtAllerDansVersion

echo Correction… >&2
for modif in true $modifs ; do $modif ; done

echo Configuration… >&2
if pge $version 0.60 # Quelle version exactement? > 0.52 < 0.72
then
	mkdir -p build
	cd build
	cmake -DCMAKE_INSTALL_PREFIX="$dest" $OPTIONS_CMAKE ..
else
	./configure --prefix="$dest" $OPTIONS_CONF
fi

echo Compilation… >&2
make

echo Installation… >&2
sudo make install
sutiliser
