diff -ruw sqlite3.c sqlite3.c
--- sqlite3.c
+++ sqlite3.c
@@ -6406,6 +6406,7 @@
 #define SQLITE_DIRECTONLY       0x000080000
 #define SQLITE_SUBTYPE          0x000100000
 #define SQLITE_INNOCUOUS        0x000200000
+#define SQLITE_PLACEHOLDER      0x000400000
 #define SQLITE_RESULT_SUBTYPE   0x001000000
 #define SQLITE_SELFORDER1       0x002000000
 
@@ -166872,6 +166879,8 @@
   return AtomicLoad(&db->u1.isInterrupted)!=0;
 }
 
+static void sqlite3InvalidFunction(sqlite3_context *, int, sqlite3_value **);
+
 /*
 ** This function is exactly the same as sqlite3_create_function(), except
 ** that it is designed to be called by internal code. The difference is
@@ -166894,6 +166903,7 @@
 ){
   FuncDef *p;
   int extraFlags;
+  int createFlags;
 
   assert( sqlite3_mutex_held(db->mutex) );
   assert( xValue==0 || xSFunc==0 );
@@ -166911,6 +166921,7 @@
   extraFlags = enc &  (SQLITE_DETERMINISTIC|SQLITE_DIRECTONLY|
                        SQLITE_SUBTYPE|SQLITE_INNOCUOUS|
                        SQLITE_RESULT_SUBTYPE|SQLITE_SELFORDER1);
+  createFlags = enc & (SQLITE_PLACEHOLDER);
   enc &= (SQLITE_FUNC_ENCMASK|SQLITE_ANY);
 
   /* The SQLITE_INNOCUOUS flag is the same bit as SQLITE_FUNC_UNSAFE.  But
@@ -166955,6 +166966,11 @@
   */
   p = sqlite3FindFunction(db, zFunctionName, nArg, (u8)enc, 0);
   if( p && (p->funcFlags & SQLITE_FUNC_ENCMASK)==(u32)enc && p->nArg==nArg ){
+    if( (createFlags & SQLITE_PLACEHOLDER)
+     && p->xSFunc != sqlite3InvalidFunction ){
+      /* If the caller does not want to replace an existing func, fine. */
+      return SQLITE_OK;
+    }
     if( db->nVdbeActive ){
       sqlite3ErrorWithMsg(db, SQLITE_BUSY,
         "unable to delete/modify user-function due to active statements");
diff -ruw sqlite3.h sqlite3.h
--- sqlite3.h
+++ sqlite3.h
@@ -5321,6 +5321,7 @@
 #define SQLITE_DIRECTONLY       0x000080000
 #define SQLITE_SUBTYPE          0x000100000
 #define SQLITE_INNOCUOUS        0x000200000
+#define SQLITE_PLACEHOLDER      0x000400000
 #define SQLITE_RESULT_SUBTYPE   0x001000000
 #define SQLITE_SELFORDER1       0x002000000
 
diff -ruw shell.c shell.c
--- shell.c
+++ shell.c
@@ -759,7 +759,8 @@
   SQLITE_EXTENSION_INIT2(pApi);
   (void)pzErrMsg;  /* Unused */
   rc = sqlite3_create_function(db, "regexp", 2, 
-                            SQLITE_UTF8|SQLITE_INNOCUOUS|SQLITE_DETERMINISTIC,
+                            SQLITE_UTF8|SQLITE_INNOCUOUS|SQLITE_DETERMINISTIC
+                            |SQLITE_PLACEHOLDER,
                             0, re_sql_func, 0, 0);
   if( rc==SQLITE_OK ){
     /* The regexpi(PATTERN,STRING) function is a case-insensitive version
