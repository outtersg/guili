#!/bin/sh
# Copyright (c) 2004-2005 Guillaume Outters
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

set -e

Delirant() { local s2 ; while [ -h "$s" ] ; do s2="`readlink "$s"`" ; case "$s2" in [^/]*) s2="`dirname "$s"`/$s2" ;; esac ; s="$s2" ; done ; } ; SCRIPTS() { local s="`command -v "$0"`" ; [ -x "$s" -o ! -x "$0" ] || s="$0" ; case "$s" in */bin/*sh) case "`basename "$s"`" in *.*) true ;; *sh) s="$1" ;; esac ;; esac ; case "$s" in [^/]*) local d="`dirname "$s"`" ; s="`cd "$d" ; pwd`/`basename "$s"`" ;; esac ; Delirant ; s="`dirname "$s"`" ; Delirant ; SCRIPTS="$s" ; } ; SCRIPTS
. "$SCRIPTS/util.sh"

modifs="multiarch"
v 2.2.3 && prerequis="gettext iconv" || true
v 2.6.5 || true
v 2.12.12 && modifs="$modifs pasBesoinDeCarbon micMacGnuIconv" || true
v 2.22.5 || true
v 2.34.3 && prerequis="gettext iconv libffi >= 3" || true
v 2.36.4 || true
v 2.38.1 || true
v 2.40.0 && modifs="$modifs sansDtrace" || true
v 2.41.2 || true
v 2.42.1 || true
v 2.44.0 || true
v 2.48.0 && prerequis="libtool python pkgconfig \\ gettext iconv libffi >= 3 pcre < 10" || true # libtool car en 2.58.3 en tout cas, sans, il reste une macro LT_PREREQ dans le configure.
v 2.48.1 || true
v 2.48.2 || true
v 2.52.1 || true
v 2.52.2 || true
v 2.58.2 || true
v 2.58.3 || true
# Meson + Ninja en 2.60.
# zlib lorsque meson a été compilé avec une zlib dynamique, sans quoi meson charge le paquet Python zquelquechose qui charge binascii qui explose s'il ne trouve pas libz.so.x
v 2.60.5 && prerequis="zlib meson ninja \\ $prerequis" && retirerModif pasBesoinDeCarbon && ajouterModif sansXattr environ || true
v 2.60.6 || true
v 2.63.3 || true
v 2.71.0 || true
v 2.75.3 && remplacerPrerequis "pcre >= 10" || true
v 2.76.3 || true

archive="ftp://ftp.gtk.org/pub/gtk/v`vmaj $version`/$logiciel-$version.tar.bz2"
pge $version 2.12.12 && archive="ftp://ftp.gtk.org/pub/$logiciel/`vmaj $version`/$logiciel-$version.tar.bz2"
pge $version 2.34.3 && archive="http://ftp.acc.umu.se/pub/GNOME/sources/$logiciel/`vmaj $version`/$logiciel-$version.tar.xz"

environ()
{
	# Sous les BSD, environ doit être laissée dans les biblios dynamiques même si introuvable (il sera défini pour l'exécutable final).
	# https://git.sailfishos.org/mer-core/qtbase/commit/ccf74b592809e0c5a613eff27d6431a4c659e368
	# Notons que c'est une régression introduite par meson, puisque m4macros/attributes.m4 savait déjà faire une exception.
	
	[ `uname` = FreeBSD ] || return 0
	
	for f in gio/fam/meson.build
	do
		[ -f "$f" ] || continue
		filtrer "$f" sed -e "s#'-Wl,-no-undefined' *,*##g"
	done
	optionsMeson="$optionsMeson -Db_lundef=false"
}

# Le machin vérifie que biblio et iconv.h sont bien d'accord, soit tout GNU iconv, soit tout système. Problème: sur Darwin, on a un hybride. Et sur mon BSD, il s'emmêle les pédales. En plus on s'en fout, parce que l'ifdef n'est utilisé nulle part ailleurs.
micMacGnuIconv()
{
	#filtrer glib/glib/gconvert.c grep -v '#error.*iconv'
	CPPFLAGS="$CPPFLAGS -DUSE_LIBICONV_GNU=1"
	LDFLAGS="$LDFLAGS -liconv"
	export CPPFLAGS LDFLAGS
}

pasBesoinDeCarbon()
{
	# N'a pas vraiment besoin de Carbon, qui nous gonfle
	filtrer configure sed -e '/framework.Carbon/s/^/true #/'
}

sansDtrace()
{
	# La 2.40 a du code dtrace, mais sur mon FreeBSD 8.2, ça ne compile pas vraiment.
	optionsConfigure="$optionsConfigure --disable-dtrace"
}

sansXattr()
{
	echo '#include <attr/xattr.h>' > $TMP/1.c
	$CC -c -o $TMP/1.o $TMP/1.c 2> /dev/null || optionsConfigure="$optionsConfigure --disable-xattr" optionsMeson="$optionsMeson -Dxattr=false"
}

destiner

prerequis

obtenirEtAllerDansVersion

pge "$version" 2.60 || [ -f configure ] || ./autogen.sh

echo Correction… >&2
for modif in true $modifs ; do $modif ; done

echo Configuration… >&2
optionsConfigure="$optionsConfigure --enable-libmount=no" optionsMeson="$optionsMeson -Dlibmount=disabled"
if pge "$version" 2.60
then
	meson build --prefix="$dest" $optionsMeson
	cd build
	make=ninja
else
./configure --prefix="$dest" $optionsConfigure
	make=make
fi

echo Compilation… >&2
$make

echo Installation… >&2
sudoku PYTHONPATH="$PYTHONPATH" $make install

sutiliser
