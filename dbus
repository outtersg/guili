#!/bin/sh
# Copyright (c) 2006 Guillaume Outters
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

set -e

Delirant() { local s2 ; while [ -h "$s" ] ; do s2="`readlink "$s"`" ; case "$s2" in [^/]*) s2="`dirname "$s"`/$s2" ;; esac ; s="$s2" ; done ; } ; SCRIPTS() { local s="`command -v "$0"`" ; [ -x "$s" -o ! -x "$0" ] || s="$0" ; case "$s" in */bin/*sh) case "`basename "$s"`" in *.*) true ;; *sh) s="$1" ;; esac ;; esac ; case "$s" in [^/]*) local d="`dirname "$s"`" ; s="`cd "$d" ; pwd`/`basename "$s"`" ;; esac ; Delirant ; s="`dirname "$s"`" ; Delirant ; SCRIPTS="$s" ; } ; SCRIPTS
. "$SCRIPTS/util.sh"

# Historique des versions gérées

# zlib pour certains composants de glib, cf. explication dans ce dernier.
v 1.0.2 && prerequis="expat zlib glib" || true
v 1.15.0 && prerequis="meson pkgconfig \\ expat zlib glib" && modifs="commeToutLeMonde" || true
v 1.16.0 || true

# Modifications

avecOuSansX11()
{
	# Si l'option a été explicitement écartée, on passe.
	
	local optionsX="`options "$argOptions=x"`"
	( argOptions="$optionsX" ; option x ) || return 1
	
	# Ensuite, trouvera-t-on un paquet X11?
	
	local cheminPkgconf="$PKG_CONFIG_PATH" d
	for d in /usr/local/libdata/pkgconfig
	do
		[ ! -d /usr/local/libdata/pkgconfig ] || cheminPkgconf="$cheminPkgconf:$d"
	done
	
	( PKG_CONFIG_PATH="$cheminPkgconf" pkg-config x11 ) || return 1

	# Configuration complète.
	
	argOptions="$optionsX"
	option x # On consomme notre belle option toute neuve pour éviter qu'il nous signale un oubli d'utilisation.
	
	export PKG_CONFIG_PATH="$cheminPkgconf"
	OPTIONS_CONF="$OPTIONS_CONF x11-autolaunch=enabled"
	
	return 0
}
avecOuSansX11 || true

commeToutLeMonde()
{
	case `uname` in
		FreeBSD)
			OPTIONS_CONF="$OPTIONS_CONF session-socket-dir=/tmp system-pid-file=/var/run/dbus/pid system-socket=/var/run/dbus/system_bus_socket"
			export PKG_CONFIG_PATH="$PKG_CONFIG_PATH:/usr/local/libdata/pkgconfig"
			;;
	esac
}

optionsConf()
{
	local mode=$1 ; shift
		case $mode in
			meson)
				printf "$OPTIONS_CONF" | sed -e 's/-/_/g' -e 's/ / -D/g'
				;;
			cmake)
				false # À FAIRE
				;;
			configure)
				printf "$OPTIONS_CONF" | sed -e 's/ / --with-/g'
				;;
		esac
}

# Variables

suffixe=xz
pge $version 1.13.8 || suffixe=gz
archive="https://dbus.freedesktop.org/releases/dbus/dbus-$version.tar.$suffixe"

destiner

prerequis

obtenirEtAllerDansVersion

echo Correction… >&2
for modif in true $modifs ; do $modif ; done

echo Compilation… >&2
# À FAIRE: configurer avec le bus système similaire aux ports FreeBSD (/usr/local/var/run/dbus/system_bus_socket ?
case "$prerequis" in
	*meson*)
		meson setup build -Dprefix="$dest" --buildtype release `optionsConf meson`
		cd build
		;;
	*cmake*)
		mkdir -p build && cd build
		cmake -DCMAKE_INSTALL_PREFIX="$dest" -DCMAKE_BUILD_TYPE=Release `optionsConf cmake` ..
		;;
	*)
		./configure --prefix="$dest" `optionsConf configure`
		;;
esac

echo Compilation… >&2
case "$prerequis" in
	*meson*) meson compile ;;
	*)
make
		;;
esac

echo Installation… >&2
case "$prerequis" in
	*meson*) sudoku meson install ;;
	*)
sudo make install
		;;
esac

sudoku -d /usr/local chown root:messagebus "$dest/libexec/dbus-daemon-launch-helper"
sudoku -d /usr/local chmod 4750 "$dest/libexec/dbus-daemon-launch-helper"

sutiliser
