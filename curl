#!/bin/sh
# Copyright (c) 2006 Guillaume Outters
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

set -e

DelieS() { local s2 ; while [ -h "$s" ] ; do s2="`readlink "$s"`" ; case "$s2" in [^/]*) s2="`dirname "$s"`/$s2" ;; esac ; s="$s2" ; done ; } ; SCRIPTS() { local s="`command -v "$0"`" ; [ -x "$s" -o ! -x "$0" ] || s="$0" ; case "`basename "$s"`" in *.*) true ;; *sh) s="$1" ;; esac ; case "$s" in [^/]*) s="`pwd`/$s" ;; esac ; DelieS ; s="`dirname "$s"`" ; DelieS ; SCRIPTS="$s" ; } ; SCRIPTS
. "$SCRIPTS/util.sh"

# Historique des versions gérées

v 7.16.0 && prerequis="gettext zlib libidn < 2" && modifs="multiarch sslcertfile" || true
version=7.16.1
version=7.16.2
version=7.17.0
version=7.18.0
version=7.19.5
version=7.20.1
v 7.21.0 && modifs="multiarch sslcertfile" || true
version=7.23.0

version=7.26.0

v 7.38.0 || true
v 7.39.0 || true
v 7.43.0 || true
v 7.49.0 || true
v 7.51.0 && remplacerPrerequis "libidn >= 2" || true
v 7.53.1 || true
v 7.55.1 || true
v 7.58.0 || true
v 7.59.0 || true
v 7.61.0 || true
v 7.63.0 || true
v 7.64.0 || true
v 7.65.3 || true
v 7.77.0 || true
v 7.78.0 || true
v 7.80.0 || true
v 7.84.0 && v_nghttp2=">= 1.12" || true # Ouille, https://github.com/curl/curl/issues/9136
v 7.85.0 || true
v 7.86.0 || true
v 7.88.1 || true
v 8.0.1 || true
v 8.3.0 || true
v 8.5.0 || true
v 8.6.0 && prerequis="perl \\ $prerequis libpsl" || true # perl pour la doc.
v 8.11.1 || true
v 8.12.1 || true

# OpenSSL:
# - s'il ne préexiste pas, on ne force pas: on est peut-être sur un système qui a besoin de cURL pour installer OpenSSL.
# - s'il existe (dans un chemin système par exemple), on le prérequiert, afin de s'assurer d'utiliser une version contrôlée par nous.
if command -v openssl 2>&1 > /dev/null
then
	prerequis="$prerequis openssl"
	if pge $version 7.70 # À vérifier à partir de quelle version il réclame.
	then
		OPTIONS_CONF="$OPTIONS_CONF --with-openssl"
	fi
fi

# LibSSH: si on la trouve dans notre $INSTALLS, alors on l'utilise. On ne se lie pas à une libssh système.
if command -v pkg-config 2> /dev/null >&2 && pkg-config libssh2
then
	prerequis="$prerequis libssh+osslxx"
	OPTIONS_CONF="$OPTIONS_CONF --with-libssh2"
fi

opSiPasPas idn libidn || true # libidn par défaut (sauf si explicitement exclue).
optionSi ldap/openldap || true
option ldap || OPTIONS_CONF="$OPTIONS_CONF --disable-ldap" # On doit désactiver explicitement, sans quoi sur certains Linux un peu trop bien dotés, le configure détecte le libldap.so système, s'y lie, et avec elle à la libssl.so système, qui embarque un RAND_egd, poussant le configure à déclarer un peu plus tard un HAVE_RAND_EGD alors qu'en fait l'OpenSSL auquel on se liera en définitive, en version 1.1, ne définit plus RAND_egd.
if [ -n "$v_nghttp2" ] && opSiPasPas http2 "nghttp2 $v_nghttp2"
then
	modifs="$modifs moinsLnghttp2"
fi

prerequisOpenssl

# Modifications

moinsLnghttp2()
{
	# Ils ont pensé à rajouter le -l quand on passe par pkgconfig, mais pas dans leur mode manuel :-(
	filtrer configure sed -e '/CURL_LIBRARY_PATH.*DIR_H2/a\
LIBS="$LIBS -lnghttp2"
'
}

sslcertfile()
{
	filtrer lib/curl_setup.h sed -e '/defined.*CURL_WANTS_CA_BUNDLE_ENV/{
i\
#define CURL_CA_BUNDLE (getenv("CURL_CA_BUNDLE") && strlen(getenv("CURL_CA_BUNDLE")) ? getenv("CURL_CA_BUNDLE") : getenv("SSL_CA_CERT"))
}
'
	filtrer configure sed -e "/want_ca=\"unset\"/s#=.*#=\"$dest/share/curl-ca-bundle.crt\"#"
}

multiarchPrecombiner()
{
	f="$2/bin/curl-config"
	sed -e "s/-arch $1//g" < "$f" > "$TMP/$$/temp.filtrer" && sudo sh -c "cat $TMP/$$/temp.filtrer > $f"
}

faitDuTls11()
{
	case "$version_openssl" in
		1*) return 0 ;;
	esac
	return 1
}

# Doit être appelée après prerequis() (on dépend de son résultat), mais avant obtenirEtAllerDansVersion() (elle peut nous utiliser).
determinerFinalisationInstallSelonPrerequis()
{
# Si on a de quoi récupérer la liste d'AC cURL, et qu'on est liés à un OpenSSL TLS 1.1 (parce qu'il peut arriver en 2019 qu'on cherche à réinstaller un serveur "façon 2012", auquel cas notre OpenSSL, ne sachant pas causer que TLS 1.0, se vautrera à coup sûr).
if [ -e "$SCRIPTS/curlcabundle" ] && faitDuTls11
then
	. "$SCRIPTS/curlcabundle"
	installerACDest()
	{
		[ -z "$GUILI_MOIRE" ] || return 0
		PATH="$dest/bin:$PATH" LD_LIBRARY_PATH="$dest/lib:$LD_LIBRARY_PATH" installerAC "$@"
	}
else
	installerACDest() { true ; }
fi
}

finaliserInstallCurl()
{
	# On installe notre liste d'AC, personnalisations locales incluses.
	installerACDest
}
guili_localiser="$guili_localiser finaliserInstallCurl"

# Variables

archive="http://curl.haxx.se/download/$logiciel-$version.tar.bz2"

destiner

prerequis

determinerFinalisationInstallSelonPrerequis

obtenirEtAllerDansVersion

echo Correction… >&2
for modif in true $modifs ; do $modif ; done

	echo Configuration… >&2
	./configure --prefix="$dest" $OPTIONS_CONF
	
	echo Compilation… >&2
	make
	
	echo Installation… >&2
	sudo make install

# On installe une première version de l'AC. Ce avant le sutiliser, pour qu'elle soit embarquée dans l'éventuel paquet compilé.
# On lui demande de préparer la version personnalisée, mais sans l'installer: le paquet compilé ne doit pas inclure les personnalisations.
installerACDest --sans-perso -k

sutiliser
