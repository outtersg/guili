#!/bin/sh
# Copyright (c) 2005 Guillaume Outters
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

set -e

Delirant() { local s2 ; while [ -h "$s" ] ; do s2="`readlink "$s"`" ; case "$s2" in [^/]*) s2="`dirname "$s"`/$s2" ;; esac ; s="$s2" ; done ; } ; SCRIPTS() { local s="`command -v "$0"`" ; [ -x "$s" -o ! -x "$0" ] || s="$0" ; case "$s" in */bin/*sh) case "`basename "$s"`" in *.*) true ;; *sh) s="$1" ;; esac ;; esac ; case "$s" in [^/]*) local d="`dirname "$s"`" ; s="`cd "$d" ; pwd`/`basename "$s"`" ;; esac ; Delirant ; s="`dirname "$s"`" ; Delirant ; SCRIPTS="$s" ; } ; SCRIPTS
. "$SCRIPTS/util.sh"

v 8.0.1 && modifs="detectionPerl detectionReadline" && contribs="pgcrypto" && prerequis="python+osslxx < 3 bison \\ ncurses readline zlib openssl < 1.1" || true
v 8.0.3 || true
v 9.1.2 && modifs="bsdAvecPythonThreade detectionPerl detectionReadline" && contribs="$contribs tablefunc" && remplacerPrerequis python+osslxx && prerequis="$prerequis gettext iconv" || true # gettext et iconv biblios de python3 (-lintl à la compil). # À FAIRE: comment détecter dynamiquement ces dépendances, sans surenchère pour les prérequis de python que celui-ci a embarqués statiquement? Certes en théorie mieux vaut trop que pas assez, en laissant l'édition de liens prendre ce qui l'intéresse, mais bon la pollution dans le .guili.prerequis, bof.
v 9.2.1 && modifs="detectionPerl detectionReadline" && contribs="$contribs hstore" || true
v 9.2.9 || true
v 9.2.18 || true
v 9.5.3 && remplacerPrerequis "openssl < 1.2" || true
v 9.6.1 && modifs="detectionPerl detectionReadline pathZic" || true
v 9.6.5 || true
v 9.6.6 || true
v 9.6.10 || true
v 9.6.11 || true
v 9.6.14 || true
v 9.6.15 || true
v 9.6.16 || true
v 9.6.19 || true
v 9.6.22 || true
v 9.6.23 || true
v 9.6.24 || true
v 12.4 || true
v 12.6 || true
v 12.7 || true
v 12.8 || true
v 12.9 || true
v 12.10 || true
v 12.11 || true
v 12.12 || true
v 12.13 || true
v 12.14 || true
v 12.15 || true
v 12.16 || true
v 12.17 || true
v 12.18 || true
v 12.19 || true
v 12.20 || true
v 12.22 || true
v 13.2 && remplacerPrerequis "openssl < 4" || true # Support d'OpenSSL 3 reporté sur les 12.9 et 11.14, mais bon calons-nous sur une version majeure.
v 13.3 || true
v 13.4 || true
v 13.5 || true
v 13.6 || true
v 13.7 || true
v 13.8 || true
v 13.9 || true
v 13.10 || true
v 13.11 || true
v 13.12 || true
v 13.13 || true
v 13.14 || true
v 13.15 || true
v 13.16 || true
v 13.18 || true
v 13.20 || true
v 13.21 || true
# Cherche à charger un sys/signalfd.h inexistant sur un vieux RedHat.
v 14.1 || true
v 14.2 || true
v 14.3 || true
v 14.5 || true
v 14.6 || true
v 14.7 || true
v 14.8 || true
v 14.9 || true
v 14.10 || true
v 14.11 || true
v 14.12 || true
v 14.13 || true
v 14.15 || true
v 14.17 || true
v 14.18 || true
v 15.1 || true
v 15.2 || true
v 15.3 || true
v 15.4 || true
v 15.5 && remplacerPrerequis "python+osslxx >= 3" || true
v 15.6 || true
v 15.7 || true
v 15.8 || true
v 15.12 || true
v 15.13 || true
v 16.1 && modifs="$modifs fdatasync" || true
v 16.2 || true
v 16.3 || true
v 16.4 || true
v 16.6 || true
v 16.8 || true
v 16.9 || true
v 17.2 || true
v 17.4 || true
v 17.5 || true

pg 8.4 $version || contribs="$contribs citext"
pg 9.0 $version || contribs="$contribs unaccent"

if pge $version 16
then
	# À FAIRE: inclure icu en optionSi sur les versions précédentes (rajouter le --with-icu)
	prerequis="pkgconfig \\ $prerequis icu"
fi

prerequisMake()
{
	# A besoin d'un make GNU.
	# Problème: un 4.2.1 (dernière version officielle) compilé par gcc 7 sur une Ubuntu 18.04 plante en segfault sur des if.
	# On va donc dire que si on est sur Linux, la version en place est suffisante pour compiler PostgreSQL.
	case `uname` in
		Linux) true ;;
		*) prerequis="make $prerequis" ;;
	esac
}

detectionReadline()
{
	filtrer configure sed -e 's#" -lncurses"#" -lncursesw" " -lncurses"#g'
}

bsdAvecPythonThreade()
{
	filtrer configure sed -e '/freebsd.*)$/,/;;/d'
}

detectionPerl()
{
	avecPerl="--without-perl"
	if command -v perl 2> /dev/null >&1
	then
		if perl -MConfig -e 'print $Config{useshrplib}' | grep -q true
		then
			avecPerl="--with-perl"
		fi
	fi
	
	OPTIONS_CONF="$OPTIONS_CONF $avecPerl"
}

pathZic()
{
	filtrer src/timezone/Makefile sed -e "/ZIC *:*=/s#=#=PATH=\"$PATH\" LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH\" #"
}

fdatasync()
{
	# Idiotement, un #ifdef HAVE_FDATASYNC a été supprimé pour cesser de soutenir les vieux OS sous PostgreSQL 16. On rétablit.
	
	cat > $TMP/$$/1.c <<TERMINE
#include <unistd.h>

int main(int argc, char ** argv)
{
	return fdatasync(0);
}
TERMINE
	if ! compilo_test $CC $TMP/$$/1.c -o $TMP/$$/1.out && compilo_test $CC -Dfdatasync=fsync $TMP/$$/1.c -o $TMP/$$/1.out
	then
		export CFLAGS="$CFLAGS -Dfdatasync=fsync"
	fi
}

archive=http://ftp.postgresql.org/pub/source/v$version/postgresql-$version.tar.bz2
pge $version 9 || jar=http://jdbc.postgresql.org/download/postgresql-8.0-310.jdbc3.jar

# Si on détecte perl, on laissera le configure le détecter, mais uniquement dans notre version prérequise.
if command -v perl > /dev/null 2>&1
then
	prerequis="perl $prerequis"
fi
prerequisMake
prerequisOpenssl

destiner

prerequis

obtenirEtAllerDansVersion

echo Corrections… >&2
for modif in true $modifs
do
	"$modif"
done

echo Configuration… >&2

# À FAIRE: dans le temps je compilais avec --with-pam --with-rendezvous. Manifestement ça demande une détection et une condition.
./configure --prefix="$dest" --enable-thread-safety --with-python --with-openssl $OPTIONS_CONF

echo Compilation… >&2
make -j4
sed < contrib/start-scripts/freebsd > share.init.postgresql -e "/^prefix=/s#=.*#=$INSTALLS#"
chmod a+x share.init.postgresql

echo Installation… >&2
sudo make install
pge $version 9 || sudo cp `obtenir "$jar"` "$dest/lib/postgresql.jar"
for contrib in $contribs
do
	( cd contrib/$contrib && make && sudo make install )
done
sudo cp share.init.postgresql "$dest/share/init.postgresql"

sutiliser
