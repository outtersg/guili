#!/bin/sh
# Copyright (c) 2005 Guillaume Outters
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

set -e

Delirant() { local s2 ; while [ -h "$s" ] ; do s2="`readlink "$s"`" ; case "$s2" in [^/]*) s2="`dirname "$s"`/$s2" ;; esac ; s="$s2" ; done ; } ; SCRIPTS() { local s="`command -v "$0"`" ; [ -x "$s" -o ! -x "$0" ] || s="$0" ; case "$s" in */bin/*sh) case "`basename "$s"`" in *.*) true ;; *sh) s="$1" ;; esac ;; esac ; case "$s" in [^/]*) local d="`dirname "$s"`" ; s="`cd "$d" ; pwd`/`basename "$s"`" ;; esac ; Delirant ; s="`dirname "$s"`" ; Delirant ; SCRIPTS="$s" ; } ; SCRIPTS
. "$SCRIPTS/util.sh"

# Historique des versions gérées

prerequis="pkgconfig make nasm yasm \\"

version=2005-10-14
modifs=panther
OPTIONS_CONF="--disable-altivec" # h264_chroma_mc8, entre autres, a une variable non initialisée qui fait tout planter.

version=2005-10-29

version=r6177 && prerequis="$prerequis libvorbis x264" || true
OPTIONS_CONF="--enable-gpl --enable-shared --enable-pp"

v 0.7-rc1 && modifs= && OPTIONS_CONF="$OPTIONS_CONF --enable-nonfree" && retirerModif -v OPTIONS_CONF --enable-pp || true
v 1.0 && prerequis="$prerequis opus lame" && retirerModif -v OPTIONS_CONF --enable-nonfree || true
v 1.0.1 || true
v 2.5 && modifs="$modifs monCc" && remplacerPrerequis "lame >= 3.98.3" || true
v 2.5.2 || true
v 3.2.2 || true
v 3.3.2 || true
v 4.0.2 || true
v 4.2.1 || true
v 5.1.2 && modifs="$modifs metallib" || true
v 5.1.3 || true
v 7.1 || true

predestiner="$predestiner fbsd10 inclureModules"

# Modifs pré-destiner()

inclureModule()
{
	local o="$1" oc="$2" l="$3" # Option, option conf, logiciel
	case "$l" in "") l="$o" ;; esac
	case "$oc" in "") oc="$l" ;; esac
	
	# Si notre logiciel n'est pas prévu dans les prérequis, c'est que la version de ffmpeg ne le gérait pas encore. On se barre.
	case "$prerequis" in *" $l "*) true ;; *) return 0 ;; esac

	# Si le logiciel est explicitement écarté, on obtempère.
	local quoi=disable
	opSiPasPas $o $l  && quoi="enable" || virerPrerequis $l
	OPTIONS_CONF="$OPTIONS_CONF --$quoi-$oc"
}

inclureModules()
{
	local m
	for m in \
		"vorbis libvorbis libvorbis" \
		"x264 libx264" \
		"ogg libogg" \
		"opus libopus" \
		"lame libmp3lame"
	do
		inclureModule $m
	done
}

fbsd10()
{
# http://lists.freebsd.org/pipermail/freebsd-questions/2012-February/238956.html
if [ `uname` = FreeBSD -a `uname -r | sed -e 's/[^0-9].*//'` -lt 10 ] # Le 10 est arbitraire.
then
	prerequis="binutils \\ $prerequis"
fi
}

# Modifications

metallib()
{
	# Sur mon Mac 10.13, metallib n'a pas la variante d'option …-without-linking.
	filtrer ffbuild/common.mak sed -e 's/--split-module-without-linking/--split-module/g'
}

monCc()
{
	# binutils: http://lists.freebsd.org/pipermail/freebsd-questions/2012-February/238956.html; mais même avec ça ça ne passe pas, on fait donc un export CC=/usr/bin/gcc (sur mon FreeBSD: /usr/local/bin/gcc == 4.9, /usr/bin/gcc == 4.2). La 4.2 est la plus stable (la 4.9 se vautre fréquemment en SEGFAULT), donc on fera le gros de la compil en 4.2 avec le CC=…, et de temps à autre quand on aura des plantages 64 bits, on lancera le make, faisant un ps auxww | grep cc, on repérera la ligne qui tourne avant qu'elle ne plante, et on la relancera en remplaçant l'/usr/bin/gcc par gcc. Puis make jusqu'au prochain plantage pour continuer en 4.2, etc.
	if [ ! -z "$CC" ] ; then
		filtrer configure sed -e '/^host_cc_default=/c\
host_cc_default="'"$CC"'"
' -e '/^cc_default=/c\
cc_default="'"$CC"'"
'
	fi
}

# L'édition de liens utilise un truc qui ne marche que pour 10.3… et a la bonne
# grâce de nous le signaler.
panther()
{
	export MACOSX_DEPLOYMENT_TARGET=10.3
}

# Variables

archive_cvs="cvs://anonymous:@mplayerhq.hu:/cvsroot/$logiciel:$logiciel"
archive_svn=svn://svn.mplayerhq.hu/$logiciel/trunk
archive="http://ffmpeg.org/releases/ffmpeg-$version.tar.bz2"

for modif in true $predestiner ; do $modif ; done

destiner

prerequis

obtenirEtAllerDansVersion

echo Correction… >&2
for modif in true $modifs ; do $modif ; done

echo Configuration… >&2
./configure --prefix="$dest" $OPTIONS_CONF

echo Compilation… >&2
make -j 4

echo Installation… >&2
sudo make install

sutiliser
